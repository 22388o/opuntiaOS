#pragma GCC system_header

#ifndef _LIBCXX_TYPE_TRAITS
#define _LIBCXX_TYPE_TRAITS

#include <__config>
#include <cstddef>

_LIBCXX_BEGIN_NAMESPACE_STD

// Helper Classes

template <class T, T v>
struct integral_constant {
    static constexpr T value = v;
    constexpr operator T() const { return value; }
    constexpr T operator()() const { return value; }
};

template <bool v>
using bool_constant = integral_constant<bool, v>;

using true_type = integral_constant<bool, true>;
using false_type = integral_constant<bool, false>;

// Primary type categories

template <class T>
struct is_array : false_type {
};

template <class T>
struct is_array<T[]> : true_type {
};

template <class T, size_t N>
struct is_array<T[N]> : true_type {
};

template <class T>
inline constexpr bool is_array_v = is_array<T>::value;

_LIBCXX_END_NAMESPACE_STD

#endif // _LIBCXX_TYPE_TRAITS